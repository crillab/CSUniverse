### YamlMime:ManagedReference
items:
- uid: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem
  commentId: T:Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem
  id: IUniverseProblem
  parent: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem
  children:
  - Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.AddConstraint(Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint)
  - Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.AddVariable(Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable)
  - Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.GetConstraints
  - Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.GetVariables
  langs:
  - csharp
  - vb
  name: IUniverseProblem
  nameWithType: IUniverseProblem
  fullName: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem
  type: Interface
  source:
    remote:
      path: docfx_project/src/Fr.UnivArtois.CRIL.CSUniverse/Core/Problem/IUniverseProblem.cs
      branch: main
      repo: https://gitlab.univ-artois.fr/cril-exakis-nelite-adp/softwares-tfa/cp/tootatis/csuniverse.git
    id: IUniverseProblem
    path: src/Fr.UnivArtois.CRIL.CSUniverse/Core/Problem/IUniverseProblem.cs
    startLine: 27
  assemblies:
  - Fr.UnivArtois.CRIL.CSUniverse
  namespace: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem
  summary: "\nThe IUniverseProblem represents the constraint problem.\n"
  example: []
  syntax:
    content: public interface IUniverseProblem
    content.vb: Public Interface IUniverseProblem
- uid: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.AddVariable(Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable)
  commentId: M:Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.AddVariable(Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable)
  id: AddVariable(Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable)
  parent: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem
  langs:
  - csharp
  - vb
  name: AddVariable(IUniverseVariable)
  nameWithType: IUniverseProblem.AddVariable(IUniverseVariable)
  fullName: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.AddVariable(Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable)
  type: Method
  source:
    remote:
      path: docfx_project/src/Fr.UnivArtois.CRIL.CSUniverse/Core/Problem/IUniverseProblem.cs
      branch: main
      repo: https://gitlab.univ-artois.fr/cril-exakis-nelite-adp/softwares-tfa/cp/tootatis/csuniverse.git
    id: AddVariable
    path: src/Fr.UnivArtois.CRIL.CSUniverse/Core/Problem/IUniverseProblem.cs
    startLine: 34
  assemblies:
  - Fr.UnivArtois.CRIL.CSUniverse
  namespace: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem
  summary: "\nAdds a variable to this problem.\n"
  example: []
  syntax:
    content: void AddVariable(IUniverseVariable variable)
    parameters:
    - id: variable
      type: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable
      description: The variable to add.
    content.vb: Sub AddVariable(variable As IUniverseVariable)
  overload: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.AddVariable*
  see:
  - linkId: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable
    commentId: T:Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable
- uid: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.GetVariables
  commentId: M:Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.GetVariables
  id: GetVariables
  parent: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem
  langs:
  - csharp
  - vb
  name: GetVariables()
  nameWithType: IUniverseProblem.GetVariables()
  fullName: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.GetVariables()
  type: Method
  source:
    remote:
      path: docfx_project/src/Fr.UnivArtois.CRIL.CSUniverse/Core/Problem/IUniverseProblem.cs
      branch: main
      repo: https://gitlab.univ-artois.fr/cril-exakis-nelite-adp/softwares-tfa/cp/tootatis/csuniverse.git
    id: GetVariables
    path: src/Fr.UnivArtois.CRIL.CSUniverse/Core/Problem/IUniverseProblem.cs
    startLine: 42
  assemblies:
  - Fr.UnivArtois.CRIL.CSUniverse
  namespace: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem
  summary: "\nGives the variables in this problem.\n"
  example: []
  syntax:
    content: List<IUniverseVariable> GetVariables()
    return:
      type: System.Collections.Generic.List{Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable}
      description: The variables in this problem.
    content.vb: Function GetVariables() As List(Of IUniverseVariable)
  overload: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.GetVariables*
  see:
  - linkId: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable
    commentId: T:Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable
- uid: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.AddConstraint(Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint)
  commentId: M:Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.AddConstraint(Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint)
  id: AddConstraint(Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint)
  parent: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem
  langs:
  - csharp
  - vb
  name: AddConstraint(IUniverseConstraint)
  nameWithType: IUniverseProblem.AddConstraint(IUniverseConstraint)
  fullName: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.AddConstraint(Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint)
  type: Method
  source:
    remote:
      path: docfx_project/src/Fr.UnivArtois.CRIL.CSUniverse/Core/Problem/IUniverseProblem.cs
      branch: main
      repo: https://gitlab.univ-artois.fr/cril-exakis-nelite-adp/softwares-tfa/cp/tootatis/csuniverse.git
    id: AddConstraint
    path: src/Fr.UnivArtois.CRIL.CSUniverse/Core/Problem/IUniverseProblem.cs
    startLine: 49
  assemblies:
  - Fr.UnivArtois.CRIL.CSUniverse
  namespace: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem
  summary: "\nAdds a constraint to this problem.\n"
  example: []
  syntax:
    content: void AddConstraint(IUniverseConstraint constraint)
    parameters:
    - id: constraint
      type: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint
      description: The constraint to add.
    content.vb: Sub AddConstraint(constraint As IUniverseConstraint)
  overload: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.AddConstraint*
  see:
  - linkId: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint
    commentId: T:Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint
- uid: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.GetConstraints
  commentId: M:Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.GetConstraints
  id: GetConstraints
  parent: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem
  langs:
  - csharp
  - vb
  name: GetConstraints()
  nameWithType: IUniverseProblem.GetConstraints()
  fullName: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.GetConstraints()
  type: Method
  source:
    remote:
      path: docfx_project/src/Fr.UnivArtois.CRIL.CSUniverse/Core/Problem/IUniverseProblem.cs
      branch: main
      repo: https://gitlab.univ-artois.fr/cril-exakis-nelite-adp/softwares-tfa/cp/tootatis/csuniverse.git
    id: GetConstraints
    path: src/Fr.UnivArtois.CRIL.CSUniverse/Core/Problem/IUniverseProblem.cs
    startLine: 56
  assemblies:
  - Fr.UnivArtois.CRIL.CSUniverse
  namespace: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem
  summary: "\nGives the constraints in this problem.\n"
  example: []
  syntax:
    content: List<IUniverseConstraint> GetConstraints()
    return:
      type: System.Collections.Generic.List{Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint}
      description: The constraints in this problem.
    content.vb: Function GetConstraints() As List(Of IUniverseConstraint)
  overload: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.GetConstraints*
  see:
  - linkId: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint
    commentId: T:Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint
references:
- uid: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem
  commentId: N:Fr.UnivArtois.CRIL.CSUniverse.Core.Problem
  name: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem
  nameWithType: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem
  fullName: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem
  spec.csharp:
  - uid: Fr
    name: Fr
  - name: .
  - uid: Fr.UnivArtois
    name: UnivArtois
  - name: .
  - uid: Fr.UnivArtois.CRIL
    name: CRIL
  - name: .
  - uid: Fr.UnivArtois.CRIL.CSUniverse
    name: CSUniverse
  - name: .
  - uid: Fr.UnivArtois.CRIL.CSUniverse.Core
    name: Core
  - name: .
  - uid: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem
    name: Problem
  spec.vb:
  - uid: Fr
    name: Fr
  - name: .
  - uid: Fr.UnivArtois
    name: UnivArtois
  - name: .
  - uid: Fr.UnivArtois.CRIL
    name: CRIL
  - name: .
  - uid: Fr.UnivArtois.CRIL.CSUniverse
    name: CSUniverse
  - name: .
  - uid: Fr.UnivArtois.CRIL.CSUniverse.Core
    name: Core
  - name: .
  - uid: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem
    name: Problem
- uid: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable
  commentId: T:Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable
  parent: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem
  name: IUniverseVariable
  nameWithType: IUniverseVariable
  fullName: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable
- uid: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.AddVariable*
  commentId: Overload:Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.AddVariable
  name: AddVariable
  nameWithType: IUniverseProblem.AddVariable
  fullName: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.AddVariable
- uid: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.GetVariables*
  commentId: Overload:Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.GetVariables
  name: GetVariables
  nameWithType: IUniverseProblem.GetVariables
  fullName: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.GetVariables
- uid: System.Collections.Generic.List{Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable}
  commentId: T:System.Collections.Generic.List{Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IUniverseVariable>
  nameWithType: List<IUniverseVariable>
  fullName: System.Collections.Generic.List<Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable>
  nameWithType.vb: List(Of IUniverseVariable)
  fullName.vb: System.Collections.Generic.List(Of Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable)
  name.vb: List(Of IUniverseVariable)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable
    name: IUniverseVariable
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseVariable
    name: IUniverseVariable
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint
  commentId: T:Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint
  parent: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem
  name: IUniverseConstraint
  nameWithType: IUniverseConstraint
  fullName: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint
- uid: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.AddConstraint*
  commentId: Overload:Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.AddConstraint
  name: AddConstraint
  nameWithType: IUniverseProblem.AddConstraint
  fullName: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.AddConstraint
- uid: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.GetConstraints*
  commentId: Overload:Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.GetConstraints
  name: GetConstraints
  nameWithType: IUniverseProblem.GetConstraints
  fullName: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseProblem.GetConstraints
- uid: System.Collections.Generic.List{Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint}
  commentId: T:System.Collections.Generic.List{Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IUniverseConstraint>
  nameWithType: List<IUniverseConstraint>
  fullName: System.Collections.Generic.List<Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint>
  nameWithType.vb: List(Of IUniverseConstraint)
  fullName.vb: System.Collections.Generic.List(Of Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint)
  name.vb: List(Of IUniverseConstraint)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint
    name: IUniverseConstraint
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Fr.UnivArtois.CRIL.CSUniverse.Core.Problem.IUniverseConstraint
    name: IUniverseConstraint
  - name: )
